{
    "schemes": [],
    "swagger": "2.0",
    "info": {
        "description": "",
        "title": "",
        "contact": {},
        "version": ""
    },
    "host": "",
    "basePath": "",
    "paths": {
        "/api/v1/cms/location": {
            "get": {
                "description": "Retrieve all location records with optional filtering and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Get all locations",
                "operationId": "get-locations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Merchant ID (UUID)",
                        "name": "merchant_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Code",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Phone",
                        "name": "phone",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Contract start date from (YYYY-MM-DD)",
                        "name": "contract_start_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Contract start date to (YYYY-MM-DD)",
                        "name": "contract_start_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Contract end date from (YYYY-MM-DD)",
                        "name": "contract_end_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Contract end date to (YYYY-MM-DD)",
                        "name": "contract_end_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Logo URL",
                        "name": "logo_url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date from (YYYY-MM-DD)",
                        "name": "created_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date to (YYYY-MM-DD)",
                        "name": "created_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created remark",
                        "name": "created_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date from (YYYY-MM-DD)",
                        "name": "updated_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date to (YYYY-MM-DD)",
                        "name": "updated_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated remark",
                        "name": "updated_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date from (YYYY-MM-DD)",
                        "name": "deleted_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date to (YYYY-MM-DD)",
                        "name": "deleted_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted by",
                        "name": "deleted_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted remark",
                        "name": "deleted_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date from (YYYY-MM-DD)",
                        "name": "synced_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date to (YYYY-MM-DD)",
                        "name": "synced_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced by",
                        "name": "synced_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced remark",
                        "name": "synced_remark",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Location"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new location record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Create a new location",
                "operationId": "create-location",
                "parameters": [
                    {
                        "description": "Location data",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Location"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Location"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/location/{id}": {
            "get": {
                "description": "Retrieve a location record by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Get a location by ID",
                "operationId": "get-location-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Location"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing location record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Update a location",
                "operationId": "update-location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated location data",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Location"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Location"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a location record by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Delete a location",
                "operationId": "delete-location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/merchant": {
            "get": {
                "description": "Retrieve all merchant records with optional filtering and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "merchants"
                ],
                "summary": "Get all merchants",
                "operationId": "get-merchants",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Code",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Phone",
                        "name": "phone",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Contract start date from (YYYY-MM-DD)",
                        "name": "contract_start_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Contract start date to (YYYY-MM-DD)",
                        "name": "contract_start_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Contract end date from (YYYY-MM-DD)",
                        "name": "contract_end_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Contract end date to (YYYY-MM-DD)",
                        "name": "contract_end_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Logo URL",
                        "name": "logo_url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date from (YYYY-MM-DD)",
                        "name": "created_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date to (YYYY-MM-DD)",
                        "name": "created_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created remark",
                        "name": "created_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date from (YYYY-MM-DD)",
                        "name": "updated_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date to (YYYY-MM-DD)",
                        "name": "updated_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated remark",
                        "name": "updated_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date from (YYYY-MM-DD)",
                        "name": "deleted_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date to (YYYY-MM-DD)",
                        "name": "deleted_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted by",
                        "name": "deleted_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted remark",
                        "name": "deleted_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date from (YYYY-MM-DD)",
                        "name": "synced_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date to (YYYY-MM-DD)",
                        "name": "synced_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced by",
                        "name": "synced_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced remark",
                        "name": "synced_remark",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Merchant"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new merchant record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "merchants"
                ],
                "summary": "Create a new merchant",
                "operationId": "create-merchant",
                "parameters": [
                    {
                        "description": "Merchant data",
                        "name": "merchant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Merchant"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Merchant"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/merchant/{id}": {
            "get": {
                "description": "Retrieve a merchant record by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "merchants"
                ],
                "summary": "Get a merchant by ID",
                "operationId": "get-merchant-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Merchant"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing merchant record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "merchants"
                ],
                "summary": "Update a merchant",
                "operationId": "update-merchant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated merchant data",
                        "name": "merchant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Merchant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Merchant"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a merchant record by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "merchants"
                ],
                "summary": "Delete a merchant",
                "operationId": "delete-merchant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-membership": {
            "get": {
                "description": "Retrieve all parking membership records with optional filtering and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmemberships"
                ],
                "summary": "Get all parking memberships",
                "operationId": "get-parking-memberships",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Membership Product ID (UUID)",
                        "name": "membership_product_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Code",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Phone",
                        "name": "phone",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time from (YYYY-MM-DD)",
                        "name": "start_time_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time to (YYYY-MM-DD)",
                        "name": "start_time_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time from (YYYY-MM-DD)",
                        "name": "end_time_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time to (YYYY-MM-DD)",
                        "name": "end_time_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date from (YYYY-MM-DD)",
                        "name": "created_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date to (YYYY-MM-DD)",
                        "name": "created_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created remark",
                        "name": "created_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date from (YYYY-MM-DD)",
                        "name": "updated_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date to (YYYY-MM-DD)",
                        "name": "updated_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated remark",
                        "name": "updated_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date from (YYYY-MM-DD)",
                        "name": "deleted_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date to (YYYY-MM-DD)",
                        "name": "deleted_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted by",
                        "name": "deleted_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted remark",
                        "name": "deleted_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date from (YYYY-MM-DD)",
                        "name": "synced_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date to (YYYY-MM-DD)",
                        "name": "synced_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced by",
                        "name": "synced_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced remark",
                        "name": "synced_remark",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ParkingMembership"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new parking membership record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmemberships"
                ],
                "summary": "Create a new parking membership",
                "operationId": "create-parking-membership",
                "parameters": [
                    {
                        "description": "ParkingMembership data",
                        "name": "parkingmembership",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingMembership"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingMembership"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-membership-product": {
            "get": {
                "description": "Retrieve all parking membership product records with optional filtering and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmembershipproducts"
                ],
                "summary": "Get all parking membership products",
                "operationId": "get-parking-membership-products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Location ID (UUID)",
                        "name": "location_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Code",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Base price",
                        "name": "base_price",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Card price",
                        "name": "card_price",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Sticker price",
                        "name": "sticker_price",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Tax price",
                        "name": "tax_price",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Duration days",
                        "name": "duration_days",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date from (YYYY-MM-DD)",
                        "name": "created_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date to (YYYY-MM-DD)",
                        "name": "created_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created remark",
                        "name": "created_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date from (YYYY-MM-DD)",
                        "name": "updated_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date to (YYYY-MM-DD)",
                        "name": "updated_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated remark",
                        "name": "updated_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date from (YYYY-MM-DD)",
                        "name": "deleted_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date to (YYYY-MM-DD)",
                        "name": "deleted_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted by",
                        "name": "deleted_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted remark",
                        "name": "deleted_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date from (YYYY-MM-DD)",
                        "name": "synced_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date to (YYYY-MM-DD)",
                        "name": "synced_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced by",
                        "name": "synced_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced remark",
                        "name": "synced_remark",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ParkingMembershipProduct"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new parking membership product record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmembershipproducts"
                ],
                "summary": "Create a new parking membership product",
                "operationId": "create-parking-membership-product",
                "parameters": [
                    {
                        "description": "ParkingMembershipProduct data",
                        "name": "parkingmembershipproduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingMembershipProduct"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingMembershipProduct"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-membership-product/{id}": {
            "get": {
                "description": "Retrieve a parking membership product record by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmembershipproducts"
                ],
                "summary": "Get a parking membership product by ID",
                "operationId": "get-parking-membership-product-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingMembershipProduct"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing parking membership product record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmembershipproducts"
                ],
                "summary": "Update a parking membership product",
                "operationId": "update-parking-membership-product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated parking membership product data",
                        "name": "parkingmembershipproduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingMembershipProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingMembershipProduct"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a parking membership product record by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmembershipproducts"
                ],
                "summary": "Delete a parking membership product",
                "operationId": "delete-parking-membership-product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-membership-transaction": {
            "get": {
                "description": "Retrieve all parking membership transaction records with optional filtering and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmembershiptransactions"
                ],
                "summary": "Get all parking membership transactions",
                "operationId": "get-parking-membership-transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Membership ID (UUID)",
                        "name": "membership_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Code",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Base amount",
                        "name": "base_amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Card amount",
                        "name": "card_amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Sticker amount",
                        "name": "sticker_amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Discount amount",
                        "name": "discount_amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Service amount",
                        "name": "service_amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Tax amount",
                        "name": "tax_amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Total amount",
                        "name": "total_amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Paid amount",
                        "name": "paid_amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Change amount",
                        "name": "change_amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date from (YYYY-MM-DD)",
                        "name": "created_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date to (YYYY-MM-DD)",
                        "name": "created_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created remark",
                        "name": "created_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date from (YYYY-MM-DD)",
                        "name": "updated_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date to (YYYY-MM-DD)",
                        "name": "updated_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated remark",
                        "name": "updated_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date from (YYYY-MM-DD)",
                        "name": "deleted_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date to (YYYY-MM-DD)",
                        "name": "deleted_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted by",
                        "name": "deleted_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted remark",
                        "name": "deleted_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date from (YYYY-MM-DD)",
                        "name": "synced_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date to (YYYY-MM-DD)",
                        "name": "synced_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced by",
                        "name": "synced_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced remark",
                        "name": "synced_remark",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ParkingMembershipTransaction"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new parking membership transaction record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmembershiptransactions"
                ],
                "summary": "Create a new parking membership transaction",
                "operationId": "create-parking-membership-transaction",
                "parameters": [
                    {
                        "description": "ParkingMembershipTransaction data",
                        "name": "parkingmembershiptransaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingMembershipTransaction"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingMembershipTransaction"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-membership-transaction/{id}": {
            "get": {
                "description": "Retrieve a parking membership transaction record by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmembershiptransactions"
                ],
                "summary": "Get a parking membership transaction by ID",
                "operationId": "get-parking-membership-transaction-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingMembershipTransaction"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing parking membership transaction record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmembershiptransactions"
                ],
                "summary": "Update a parking membership transaction",
                "operationId": "update-parking-membership-transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated parking membership transaction data",
                        "name": "parkingmembershiptransaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingMembershipTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingMembershipTransaction"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a parking membership transaction record by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmembershiptransactions"
                ],
                "summary": "Delete a parking membership transaction",
                "operationId": "delete-parking-membership-transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-membership-vehicle": {
            "get": {
                "description": "Retrieve all parking membership vehicle records with optional filtering and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmembershipvehicles"
                ],
                "summary": "Get all parking membership vehicles",
                "operationId": "get-parking-membership-vehicles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Membership ID (UUID)",
                        "name": "membership_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Vehicle Type ID (UUID)",
                        "name": "vehicle_type_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Plate Number",
                        "name": "plate_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Card Number",
                        "name": "card_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sticker Number",
                        "name": "sticker_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Brand",
                        "name": "brand",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Model",
                        "name": "model",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Color",
                        "name": "color",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date from (YYYY-MM-DD)",
                        "name": "created_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date to (YYYY-MM-DD)",
                        "name": "created_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created remark",
                        "name": "created_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date from (YYYY-MM-DD)",
                        "name": "updated_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date to (YYYY-MM-DD)",
                        "name": "updated_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated remark",
                        "name": "updated_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date from (YYYY-MM-DD)",
                        "name": "deleted_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date to (YYYY-MM-DD)",
                        "name": "deleted_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted by",
                        "name": "deleted_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted remark",
                        "name": "deleted_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date from (YYYY-MM-DD)",
                        "name": "synced_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date to (YYYY-MM-DD)",
                        "name": "synced_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced by",
                        "name": "synced_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced remark",
                        "name": "synced_remark",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ParkingMembershipVehicle"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new parking membership vehicle record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmembershipvehicles"
                ],
                "summary": "Create a new parking membership vehicle",
                "operationId": "create-parking-membership-vehicle",
                "parameters": [
                    {
                        "description": "ParkingMembershipVehicle data",
                        "name": "parkingmembershipvehicle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingMembershipVehicle"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingMembershipVehicle"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-membership-vehicle/{id}": {
            "get": {
                "description": "Retrieve a parking membership vehicle record by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmembershipvehicles"
                ],
                "summary": "Get a parking membership vehicle by ID",
                "operationId": "get-parking-membership-vehicle-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingMembershipVehicle"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing parking membership vehicle record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmembershipvehicles"
                ],
                "summary": "Update a parking membership vehicle",
                "operationId": "update-parking-membership-vehicle",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated parking membership vehicle data",
                        "name": "parkingmembershipvehicle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingMembershipVehicle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingMembershipVehicle"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a parking membership vehicle record by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmembershipvehicles"
                ],
                "summary": "Delete a parking membership vehicle",
                "operationId": "delete-parking-membership-vehicle",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-membership/{id}": {
            "get": {
                "description": "Retrieve a parking membership record by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmemberships"
                ],
                "summary": "Get a parking membership by ID",
                "operationId": "get-parking-membership-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingMembership"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing parking membership record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmemberships"
                ],
                "summary": "Update a parking membership",
                "operationId": "update-parking-membership",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated parking membership data",
                        "name": "parkingmembership",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingMembership"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingMembership"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a parking membership record by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingmemberships"
                ],
                "summary": "Delete a parking membership",
                "operationId": "delete-parking-membership",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-payment-type": {
            "get": {
                "description": "Retrieve all parking payment type records with optional filtering and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingpaymenttypes"
                ],
                "summary": "Get all parking payment types",
                "operationId": "get-parking-payment-types",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Location ID (UUID)",
                        "name": "location_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Code",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Logo URL",
                        "name": "logo_url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date from (YYYY-MM-DD)",
                        "name": "created_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date to (YYYY-MM-DD)",
                        "name": "created_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created remark",
                        "name": "created_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date from (YYYY-MM-DD)",
                        "name": "updated_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date to (YYYY-MM-DD)",
                        "name": "updated_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated remark",
                        "name": "updated_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date from (YYYY-MM-DD)",
                        "name": "deleted_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date to (YYYY-MM-DD)",
                        "name": "deleted_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted by",
                        "name": "deleted_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted remark",
                        "name": "deleted_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date from (YYYY-MM-DD)",
                        "name": "synced_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date to (YYYY-MM-DD)",
                        "name": "synced_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced by",
                        "name": "synced_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced remark",
                        "name": "synced_remark",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ParkingPaymentType"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new parking payment type record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingpaymenttypes"
                ],
                "summary": "Create a new parking payment type",
                "operationId": "create-parking-payment-type",
                "parameters": [
                    {
                        "description": "ParkingPaymentType data",
                        "name": "parkingpaymenttype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingPaymentType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingPaymentType"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-payment-type/{id}": {
            "get": {
                "description": "Retrieve a parking payment type record by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingpaymenttypes"
                ],
                "summary": "Get a parking payment type by ID",
                "operationId": "get-parking-payment-type-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingPaymentType"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing parking payment type record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingpaymenttypes"
                ],
                "summary": "Update a parking payment type",
                "operationId": "update-parking-payment-type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated parking payment type data",
                        "name": "parkingpaymenttype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingPaymentType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingPaymentType"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a parking payment type record by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingpaymenttypes"
                ],
                "summary": "Delete a parking payment type",
                "operationId": "delete-parking-payment-type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-rate": {
            "get": {
                "description": "Retrieve all parking rate records with optional filtering and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingrates"
                ],
                "summary": "Get all parking rates",
                "operationId": "get-parking-rates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "First hour cost",
                        "name": "first_hour_cost",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Subsequent hour cost",
                        "name": "subsequent_hour_cost",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Daily max cost",
                        "name": "daily_max_cost",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Discount cost",
                        "name": "discount_cost",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Lost ticket cost",
                        "name": "lost_ticket_cost",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Tax cost",
                        "name": "tax_cost",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Service cost",
                        "name": "service_cost",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date from (YYYY-MM-DD)",
                        "name": "created_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date to (YYYY-MM-DD)",
                        "name": "created_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created remark",
                        "name": "created_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date from (YYYY-MM-DD)",
                        "name": "updated_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date to (YYYY-MM-DD)",
                        "name": "updated_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated remark",
                        "name": "updated_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date from (YYYY-MM-DD)",
                        "name": "deleted_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date to (YYYY-MM-DD)",
                        "name": "deleted_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted by",
                        "name": "deleted_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted remark",
                        "name": "deleted_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date from (YYYY-MM-DD)",
                        "name": "synced_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date to (YYYY-MM-DD)",
                        "name": "synced_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced by",
                        "name": "synced_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced remark",
                        "name": "synced_remark",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ParkingRate"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new parking rate record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingrates"
                ],
                "summary": "Create a new parking rate",
                "operationId": "create-parking-rate",
                "parameters": [
                    {
                        "description": "ParkingRate data",
                        "name": "parkingrate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingRate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingRate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-rate/{id}": {
            "get": {
                "description": "Retrieve a parking rate record by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingrates"
                ],
                "summary": "Get a parking rate by ID",
                "operationId": "get-parking-rate-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingRate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing parking rate record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingrates"
                ],
                "summary": "Update a parking rate",
                "operationId": "update-parking-rate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated parking rate data",
                        "name": "parkingrate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingRate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingRate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a parking rate record by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingrates"
                ],
                "summary": "Delete a parking rate",
                "operationId": "delete-parking-rate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-terminal": {
            "get": {
                "description": "Retrieve all parking terminal records with optional filtering and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingterminals"
                ],
                "summary": "Get all parking terminals",
                "operationId": "get-parking-terminals",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Code",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Logo URL",
                        "name": "logo_url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IP terminal",
                        "name": "ip_terminal",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IP printer",
                        "name": "ip_printer",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Printer type",
                        "name": "printer_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IP camera",
                        "name": "ip_camera",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date from (YYYY-MM-DD)",
                        "name": "created_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date to (YYYY-MM-DD)",
                        "name": "created_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created remark",
                        "name": "created_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date from (YYYY-MM-DD)",
                        "name": "updated_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date to (YYYY-MM-DD)",
                        "name": "updated_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated remark",
                        "name": "updated_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date from (YYYY-MM-DD)",
                        "name": "deleted_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date to (YYYY-MM-DD)",
                        "name": "deleted_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted by",
                        "name": "deleted_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted remark",
                        "name": "deleted_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date from (YYYY-MM-DD)",
                        "name": "synced_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date to (YYYY-MM-DD)",
                        "name": "synced_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced by",
                        "name": "synced_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced remark",
                        "name": "synced_remark",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ParkingTerminal"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new parking terminal record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingterminals"
                ],
                "summary": "Create a new parking terminal",
                "operationId": "create-parking-terminal",
                "parameters": [
                    {
                        "description": "ParkingTerminal data",
                        "name": "parkingterminal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingTerminal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingTerminal"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-terminal/{id}": {
            "get": {
                "description": "Retrieve a parking terminal record by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingterminals"
                ],
                "summary": "Get a parking terminal by ID",
                "operationId": "get-parking-terminal-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingTerminal"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing parking terminal record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingterminals"
                ],
                "summary": "Update a parking terminal",
                "operationId": "update-parking-terminal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated parking terminal data",
                        "name": "parkingterminal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingTerminal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingTerminal"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a parking terminal record by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingterminals"
                ],
                "summary": "Delete a parking terminal",
                "operationId": "delete-parking-terminal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-transaction": {
            "get": {
                "description": "Retrieve all parking transaction records with optional filtering and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingtransactions"
                ],
                "summary": "Get all parking transactions",
                "operationId": "get-parking-transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Code",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Duration minutes",
                        "name": "duration_minutes",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Canceled at date from (YYYY-MM-DD)",
                        "name": "canceled_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Canceled at date to (YYYY-MM-DD)",
                        "name": "canceled_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Canceled by",
                        "name": "canceled_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Canceled remark",
                        "name": "canceled_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date from (YYYY-MM-DD)",
                        "name": "created_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date to (YYYY-MM-DD)",
                        "name": "created_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created remark",
                        "name": "created_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date from (YYYY-MM-DD)",
                        "name": "updated_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date to (YYYY-MM-DD)",
                        "name": "updated_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated remark",
                        "name": "updated_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date from (YYYY-MM-DD)",
                        "name": "deleted_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date to (YYYY-MM-DD)",
                        "name": "deleted_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted by",
                        "name": "deleted_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted remark",
                        "name": "deleted_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date from (YYYY-MM-DD)",
                        "name": "synced_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date to (YYYY-MM-DD)",
                        "name": "synced_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced by",
                        "name": "synced_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced remark",
                        "name": "synced_remark",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ParkingTransaction"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new parking transaction record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingtransactions"
                ],
                "summary": "Create a new parking transaction",
                "operationId": "create-parking-transaction",
                "parameters": [
                    {
                        "description": "ParkingTransaction data",
                        "name": "parkingtransaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingTransaction"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingTransaction"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-transaction-payment": {
            "get": {
                "description": "Retrieve all parking transaction payment records with optional filtering and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingtransactionpayments"
                ],
                "summary": "Get all parking transaction payments",
                "operationId": "get-parking-transaction-payments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "transaction_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Terminal ID",
                        "name": "terminal_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Payment Type ID",
                        "name": "payment_type_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Base amount",
                        "name": "base_amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Discount amount",
                        "name": "discount_amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Penalty amount",
                        "name": "penalty_amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Service amount",
                        "name": "service_amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Tax amount",
                        "name": "tax_amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Total amount",
                        "name": "total_amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Paid amount",
                        "name": "paid_amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Change amount",
                        "name": "change_amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Identifier",
                        "name": "identifier",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Reference",
                        "name": "reference",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date from (YYYY-MM-DD)",
                        "name": "created_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date to (YYYY-MM-DD)",
                        "name": "created_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created remark",
                        "name": "created_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date from (YYYY-MM-DD)",
                        "name": "updated_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date to (YYYY-MM-DD)",
                        "name": "updated_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated remark",
                        "name": "updated_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date from (YYYY-MM-DD)",
                        "name": "deleted_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date to (YYYY-MM-DD)",
                        "name": "deleted_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted by",
                        "name": "deleted_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted remark",
                        "name": "deleted_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date from (YYYY-MM-DD)",
                        "name": "synced_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date to (YYYY-MM-DD)",
                        "name": "synced_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced by",
                        "name": "synced_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced remark",
                        "name": "synced_remark",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ParkingTransactionPayment"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new parking transaction payment record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingtransactionpayments"
                ],
                "summary": "Create a new parking transaction payment",
                "operationId": "create-parking-transaction-payment",
                "parameters": [
                    {
                        "description": "ParkingTransactionPayment data",
                        "name": "parkingtransactionpayment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingTransactionPayment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingTransactionPayment"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-transaction-payment/{id}": {
            "get": {
                "description": "Retrieve a parking transaction payment record by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingtransactionpayments"
                ],
                "summary": "Get a parking transaction payment by ID",
                "operationId": "get-parking-transaction-payment-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingTransactionPayment"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing parking transaction payment record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingtransactionpayments"
                ],
                "summary": "Update a parking transaction payment",
                "operationId": "update-parking-transaction-payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated parking transaction payment data",
                        "name": "parkingtransactionpayment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingTransactionPayment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingTransactionPayment"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a parking transaction payment record by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingtransactionpayments"
                ],
                "summary": "Delete a parking transaction payment",
                "operationId": "delete-parking-transaction-payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-transaction-terminal": {
            "get": {
                "description": "Retrieve all parking transaction terminal records with optional filtering and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingtransactionterminals"
                ],
                "summary": "Get all parking transaction terminals",
                "operationId": "get-parking-transaction-terminals",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "transaction_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Terminal ID",
                        "name": "terminal_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Vehicle Type ID",
                        "name": "vehicle_type_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Plate number",
                        "name": "plate_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Image URL",
                        "name": "image_url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date from (YYYY-MM-DD)",
                        "name": "created_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date to (YYYY-MM-DD)",
                        "name": "created_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created remark",
                        "name": "created_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date from (YYYY-MM-DD)",
                        "name": "updated_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date to (YYYY-MM-DD)",
                        "name": "updated_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated remark",
                        "name": "updated_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date from (YYYY-MM-DD)",
                        "name": "deleted_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date to (YYYY-MM-DD)",
                        "name": "deleted_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted by",
                        "name": "deleted_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted remark",
                        "name": "deleted_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date from (YYYY-MM-DD)",
                        "name": "synced_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date to (YYYY-MM-DD)",
                        "name": "synced_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced by",
                        "name": "synced_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced remark",
                        "name": "synced_remark",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ParkingTransactionTerminal"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new parking transaction terminal record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingtransactionterminals"
                ],
                "summary": "Create a new parking transaction terminal",
                "operationId": "create-parking-transaction-terminal",
                "parameters": [
                    {
                        "description": "ParkingTransactionTerminal data",
                        "name": "parkingtransactionterminal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingTransactionTerminal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingTransactionTerminal"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-transaction-terminal/{id}": {
            "get": {
                "description": "Retrieve a parking transaction terminal record by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingtransactionterminals"
                ],
                "summary": "Get a parking transaction terminal by ID",
                "operationId": "get-parking-transaction-terminal-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingTransactionTerminal"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing parking transaction terminal record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingtransactionterminals"
                ],
                "summary": "Update a parking transaction terminal",
                "operationId": "update-parking-transaction-terminal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated parking transaction terminal data",
                        "name": "parkingtransactionterminal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingTransactionTerminal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingTransactionTerminal"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a parking transaction terminal record by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingtransactionterminals"
                ],
                "summary": "Delete a parking transaction terminal",
                "operationId": "delete-parking-transaction-terminal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-transaction/{id}": {
            "get": {
                "description": "Retrieve a parking transaction record by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingtransactions"
                ],
                "summary": "Get a parking transaction by ID",
                "operationId": "get-parking-transaction-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingTransaction"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing parking transaction record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingtransactions"
                ],
                "summary": "Update a parking transaction",
                "operationId": "update-parking-transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated parking transaction data",
                        "name": "parkingtransaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingTransaction"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a parking transaction record by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingtransactions"
                ],
                "summary": "Delete a parking transaction",
                "operationId": "delete-parking-transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-vehicle-type": {
            "get": {
                "description": "Retrieve all parking vehicle type records with optional filtering and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingvehicletypes"
                ],
                "summary": "Get all parking vehicle types",
                "operationId": "get-parking-vehicle-types",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Location ID (UUID)",
                        "name": "location_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Rate ID (UUID)",
                        "name": "rate_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Code",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Wheel count",
                        "name": "wheel_count",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Height",
                        "name": "height",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Weight",
                        "name": "weight",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Logo URL",
                        "name": "logo_url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date from (YYYY-MM-DD)",
                        "name": "created_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date to (YYYY-MM-DD)",
                        "name": "created_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created remark",
                        "name": "created_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date from (YYYY-MM-DD)",
                        "name": "updated_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date to (YYYY-MM-DD)",
                        "name": "updated_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated remark",
                        "name": "updated_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date from (YYYY-MM-DD)",
                        "name": "deleted_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date to (YYYY-MM-DD)",
                        "name": "deleted_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted by",
                        "name": "deleted_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted remark",
                        "name": "deleted_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date from (YYYY-MM-DD)",
                        "name": "synced_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date to (YYYY-MM-DD)",
                        "name": "synced_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced by",
                        "name": "synced_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced remark",
                        "name": "synced_remark",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ParkingVehicleType"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new parking vehicle type record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingvehicletypes"
                ],
                "summary": "Create a new parking vehicle type",
                "operationId": "create-parking-vehicle-type",
                "parameters": [
                    {
                        "description": "ParkingVehicleType data",
                        "name": "parkingvehicletype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingVehicleType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingVehicleType"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-vehicle-type-terminal": {
            "get": {
                "description": "Retrieve all parking vehicle type terminal records with optional filtering and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingvehicletypeterminals"
                ],
                "summary": "Get all parking vehicle type terminals",
                "operationId": "get-parking-vehicle-type-terminals",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Vehicle Type ID (UUID)",
                        "name": "vehicle_type_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Terminal ID (UUID)",
                        "name": "terminal_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date from (YYYY-MM-DD)",
                        "name": "created_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at date to (YYYY-MM-DD)",
                        "name": "created_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created remark",
                        "name": "created_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date from (YYYY-MM-DD)",
                        "name": "updated_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated at date to (YYYY-MM-DD)",
                        "name": "updated_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Updated remark",
                        "name": "updated_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date from (YYYY-MM-DD)",
                        "name": "deleted_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted at date to (YYYY-MM-DD)",
                        "name": "deleted_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted by",
                        "name": "deleted_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deleted remark",
                        "name": "deleted_remark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date from (YYYY-MM-DD)",
                        "name": "synced_at_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced at date to (YYYY-MM-DD)",
                        "name": "synced_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced by",
                        "name": "synced_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Synced remark",
                        "name": "synced_remark",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ParkingVehicleTypeTerminal"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new parking vehicle type terminal record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingvehicletypeterminals"
                ],
                "summary": "Create a new parking vehicle type terminal",
                "operationId": "create-parking-vehicle-type-terminal",
                "parameters": [
                    {
                        "description": "ParkingVehicleTypeTerminal data",
                        "name": "parkingvehicletypeterminal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingVehicleTypeTerminal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingVehicleTypeTerminal"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-vehicle-type-terminal/{id}": {
            "get": {
                "description": "Retrieve a parking vehicle type terminal record by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingvehicletypeterminals"
                ],
                "summary": "Get a parking vehicle type terminal by ID",
                "operationId": "get-parking-vehicle-type-terminal-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingVehicleTypeTerminal"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing parking vehicle type terminal record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingvehicletypeterminals"
                ],
                "summary": "Update a parking vehicle type terminal",
                "operationId": "update-parking-vehicle-type-terminal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated parking vehicle type terminal data",
                        "name": "parkingvehicletypeterminal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingVehicleTypeTerminal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingVehicleTypeTerminal"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a parking vehicle type terminal record by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingvehicletypeterminals"
                ],
                "summary": "Delete a parking vehicle type terminal",
                "operationId": "delete-parking-vehicle-type-terminal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/cms/parking-vehicle-type/{id}": {
            "get": {
                "description": "Retrieve a parking vehicle type record by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingvehicletypes"
                ],
                "summary": "Get a parking vehicle type by ID",
                "operationId": "get-parking-vehicle-type-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingVehicleType"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing parking vehicle type record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingvehicletypes"
                ],
                "summary": "Update a parking vehicle type",
                "operationId": "update-parking-vehicle-type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated parking vehicle type data",
                        "name": "parkingvehicletype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingVehicleType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingVehicleType"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a parking vehicle type record by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkingvehicletypes"
                ],
                "summary": "Delete a parking vehicle type",
                "operationId": "delete-parking-vehicle-type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Location": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "contract_end": {
                    "type": "string"
                },
                "contract_start": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "created_remark": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "deleted_remark": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                },
                "merchant": {
                    "$ref": "#/definitions/models.Merchant"
                },
                "merchant_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parking_membership_products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ParkingMembershipProduct"
                    }
                },
                "parking_payment_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ParkingPaymentType"
                    }
                },
                "parking_vehicle_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ParkingVehicleType"
                    }
                },
                "phone": {
                    "type": "string"
                },
                "synced_at": {
                    "type": "string"
                },
                "synced_by": {
                    "type": "string"
                },
                "synced_remark": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "updated_remark": {
                    "type": "string"
                }
            }
        },
        "models.Merchant": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "contract_end": {
                    "type": "string"
                },
                "contract_start": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "created_remark": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "deleted_remark": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Location"
                    }
                },
                "logo_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "synced_at": {
                    "type": "string"
                },
                "synced_by": {
                    "type": "string"
                },
                "synced_remark": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "updated_remark": {
                    "type": "string"
                }
            }
        },
        "models.ParkingMembership": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "created_remark": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "deleted_remark": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "membership_product_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parking_membership_product": {
                    "$ref": "#/definitions/models.ParkingMembershipProduct"
                },
                "parking_membership_transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ParkingMembershipTransaction"
                    }
                },
                "parking_membership_vehicles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ParkingMembershipVehicle"
                    }
                },
                "phone": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "synced_at": {
                    "type": "string"
                },
                "synced_by": {
                    "type": "string"
                },
                "synced_remark": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "updated_remark": {
                    "type": "string"
                }
            }
        },
        "models.ParkingMembershipProduct": {
            "type": "object",
            "properties": {
                "base_price": {
                    "type": "integer"
                },
                "card_price": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "created_remark": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "deleted_remark": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration_days": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/models.Location"
                },
                "location_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parking_memberships": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ParkingMembership"
                    }
                },
                "sticker_price": {
                    "type": "integer"
                },
                "synced_at": {
                    "type": "string"
                },
                "synced_by": {
                    "type": "string"
                },
                "synced_remark": {
                    "type": "string"
                },
                "tax_price": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "updated_remark": {
                    "type": "string"
                }
            }
        },
        "models.ParkingMembershipTransaction": {
            "type": "object",
            "properties": {
                "base_amount": {
                    "type": "integer"
                },
                "card_amount": {
                    "type": "integer"
                },
                "change_amount": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "created_remark": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "deleted_remark": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discount_amount": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "membership_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "paid_amount": {
                    "type": "integer"
                },
                "parking_membership": {
                    "$ref": "#/definitions/models.ParkingMembership"
                },
                "service_amount": {
                    "type": "integer"
                },
                "sticker_amount": {
                    "type": "integer"
                },
                "synced_at": {
                    "type": "string"
                },
                "synced_by": {
                    "type": "string"
                },
                "synced_remark": {
                    "type": "string"
                },
                "tax_amount": {
                    "type": "integer"
                },
                "total_amount": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "updated_remark": {
                    "type": "string"
                }
            }
        },
        "models.ParkingMembershipVehicle": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "card_number": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "created_remark": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "deleted_remark": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "membership_id": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "parking_membership": {
                    "$ref": "#/definitions/models.ParkingMembership"
                },
                "parking_vehicle_type": {
                    "$ref": "#/definitions/models.ParkingVehicleType"
                },
                "plate_number": {
                    "type": "string"
                },
                "sticker_number": {
                    "type": "string"
                },
                "synced_at": {
                    "type": "string"
                },
                "synced_by": {
                    "type": "string"
                },
                "synced_remark": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "updated_remark": {
                    "type": "string"
                },
                "vehicle_type_id": {
                    "type": "string"
                }
            }
        },
        "models.ParkingPaymentType": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "created_remark": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "deleted_remark": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/models.Location"
                },
                "location_id": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parking_transaction_payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ParkingTransactionPayment"
                    }
                },
                "synced_at": {
                    "type": "string"
                },
                "synced_by": {
                    "type": "string"
                },
                "synced_remark": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "updated_remark": {
                    "type": "string"
                }
            }
        },
        "models.ParkingRate": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "created_remark": {
                    "type": "string"
                },
                "daily_max_cost": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "deleted_remark": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discount_cost": {
                    "type": "integer"
                },
                "first_hour_cost": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "lost_ticket_cost": {
                    "type": "integer"
                },
                "parking_vehicle_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ParkingVehicleType"
                    }
                },
                "service_cost": {
                    "type": "integer"
                },
                "subsequent_hour_cost": {
                    "type": "integer"
                },
                "synced_at": {
                    "type": "string"
                },
                "synced_by": {
                    "type": "string"
                },
                "synced_remark": {
                    "type": "string"
                },
                "tax_cost": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "updated_remark": {
                    "type": "string"
                }
            }
        },
        "models.ParkingTerminal": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "created_remark": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "deleted_remark": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ip_camera": {
                    "type": "string"
                },
                "ip_printer": {
                    "type": "string"
                },
                "ip_terminal": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parking_transaction_payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ParkingTransactionPayment"
                    }
                },
                "parking_transaction_terminals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ParkingTransactionTerminal"
                    }
                },
                "parking_vehicle_type_terminals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ParkingVehicleTypeTerminal"
                    }
                },
                "printer_type": {
                    "type": "string"
                },
                "synced_at": {
                    "type": "string"
                },
                "synced_by": {
                    "type": "string"
                },
                "synced_remark": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "updated_remark": {
                    "type": "string"
                }
            }
        },
        "models.ParkingTransaction": {
            "type": "object",
            "properties": {
                "canceled_at": {
                    "type": "string"
                },
                "canceled_by": {
                    "type": "string"
                },
                "canceled_remark": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "created_remark": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "deleted_remark": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration_minutes": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "parking_transaction_payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ParkingTransactionPayment"
                    }
                },
                "parking_transaction_terminals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ParkingTransactionTerminal"
                    }
                },
                "synced_at": {
                    "type": "string"
                },
                "synced_by": {
                    "type": "string"
                },
                "synced_remark": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "updated_remark": {
                    "type": "string"
                }
            }
        },
        "models.ParkingTransactionPayment": {
            "type": "object",
            "properties": {
                "base_amount": {
                    "type": "integer"
                },
                "change_amount": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "created_remark": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "deleted_remark": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discount_amount": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "paid_amount": {
                    "type": "integer"
                },
                "parking_payment_type": {
                    "$ref": "#/definitions/models.ParkingPaymentType"
                },
                "parking_terminal": {
                    "$ref": "#/definitions/models.ParkingTerminal"
                },
                "parking_transaction": {
                    "$ref": "#/definitions/models.ParkingTransaction"
                },
                "payment_type_id": {
                    "type": "string"
                },
                "penalty_amount": {
                    "type": "integer"
                },
                "provider": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "service_amount": {
                    "type": "integer"
                },
                "synced_at": {
                    "type": "string"
                },
                "synced_by": {
                    "type": "string"
                },
                "synced_remark": {
                    "type": "string"
                },
                "tax_amount": {
                    "type": "integer"
                },
                "terminal_id": {
                    "type": "string"
                },
                "total_amount": {
                    "type": "integer"
                },
                "transaction_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "updated_remark": {
                    "type": "string"
                }
            }
        },
        "models.ParkingTransactionTerminal": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "created_remark": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "deleted_remark": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "parking_terminal": {
                    "$ref": "#/definitions/models.ParkingTerminal"
                },
                "parking_transaction": {
                    "$ref": "#/definitions/models.ParkingTransaction"
                },
                "parking_vehicle_type": {
                    "$ref": "#/definitions/models.ParkingVehicleType"
                },
                "plate_number": {
                    "type": "string"
                },
                "synced_at": {
                    "type": "string"
                },
                "synced_by": {
                    "type": "string"
                },
                "synced_remark": {
                    "type": "string"
                },
                "terminal_id": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "updated_remark": {
                    "type": "string"
                },
                "vehicle_type_id": {
                    "type": "string"
                }
            }
        },
        "models.ParkingVehicleType": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "created_remark": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "deleted_remark": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/models.Location"
                },
                "location_id": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parking_membership_vehicles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ParkingMembershipVehicle"
                    }
                },
                "parking_rate": {
                    "$ref": "#/definitions/models.ParkingRate"
                },
                "parking_transaction_terminals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ParkingTransactionTerminal"
                    }
                },
                "parking_vehicle_type_terminals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ParkingVehicleTypeTerminal"
                    }
                },
                "rate_id": {
                    "type": "string"
                },
                "synced_at": {
                    "type": "string"
                },
                "synced_by": {
                    "type": "string"
                },
                "synced_remark": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "updated_remark": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                },
                "wheel_count": {
                    "type": "integer"
                }
            }
        },
        "models.ParkingVehicleTypeTerminal": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "created_remark": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "deleted_remark": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "parking_terminal": {
                    "$ref": "#/definitions/models.ParkingTerminal"
                },
                "parking_vehicle_type": {
                    "$ref": "#/definitions/models.ParkingVehicleType"
                },
                "synced_at": {
                    "type": "string"
                },
                "synced_by": {
                    "type": "string"
                },
                "synced_remark": {
                    "type": "string"
                },
                "terminal_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "updated_remark": {
                    "type": "string"
                },
                "vehicle_type_id": {
                    "type": "string"
                }
            }
        },
        "types.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "host": {
                    "type": "string"
                },
                "latency": {
                    "type": "number"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}